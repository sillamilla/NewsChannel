version: "3.7"

services:
  kafka:
    image: docker.io/bitnami/kafka:3.6
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

  db:
    image: postgres
    container_name: postgres
    environment:
      - POSTGRES_PORT=${DB_PORT}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - '5432:5432'
    volumes:
      - ./db:/var/lib/postgresql/data
    networks:
      - internal

  server:
    container_name: postgres-server
    build:
      context: ./server
      dockerfile: Dockerfile
    command: bash -c "go build && ./server -b 0.0.0.0:8080 --timeout 120"
    volumes:
      - './server:/app/server'
    expose:
      - 8080
    depends_on:
      - db
    networks:
      - internal
    stdin_open: true
volumes:
  kafka_data:
    driver: local
  data:

networks:
  internal:
    driver: bridge